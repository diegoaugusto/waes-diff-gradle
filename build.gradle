/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
sourceCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath ("org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4")
    }
}

apply plugin: 'org.junit.platform.gradle.plugin'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenCentral()
    maven {
    		url "http://repo1.maven.org/maven2/org/junit/"
    }
}

dependencies {
    compile "javax.ws.rs:javax.ws.rs-api:2.0.1"
    compile "com.google.code.gson:gson:2.8.2"
    compile 'org.mongodb:mongodb-driver:3.4.3'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.3'
    compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.9.0'
    
 
 	providedCompile "javax.servlet:javax.servlet-api:3.1.0" 

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
    
    testCompile("junit:junit:4.12")
    testRuntime("org.junit.vintage:junit-vintage-engine:4.12.0-M4")

    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.0-M4")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.0-M4")

    // Enable use of the JUnitPlatform Runner within the IDE
    testCompile("org.junit.platform:junit-platform-runner:1.0.0-M4")
}

junitPlatform {
    details 'tree'
}

task copyDependencies(type: Copy) {
   from configurations.compile   
   into 'dependencies'
}

test {
	//we want display the following test events
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}

build.dependsOn(copyDependencies)
